public class GroceryItemOrder {
    private String name;
    private int quantity;
    private double pricePerUnit;

    
    public GroceryItemOrder(String name, double pricePerUnit) {
        this.name = name;
        this.pricePerUnit = pricePerUnit;
        this.quantity = 1;
    }

    
    public double getCost() {
        return quantity * pricePerUnit;
    }

   
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }
}
--------------------------------------------------------------------------------------------------------------------------------------
import java.util.ArrayList;

public class GroceryList {
    private ArrayList<GroceryItemOrder> items;

    // Constructor
    public GroceryList() {
        items = new ArrayList<>();
    }

    // Method to add a new item to the grocery list
    public void add(GroceryItemOrder item) {
        if (items.size() < 10) { // List can hold up to 10 items
            items.add(item);
        } else {
            System.out.println("Cannot add more than 10 items.");
        }
    }

    // Method to get the total cost of all items in the list
    public double getTotalCost() {
        double totalCost = 0.0;
        for (GroceryItemOrder item : items) {
            totalCost += item.getCost();
        }
        return totalCost;
    }
}
----------------------------------------------------------------------------------------------------------------------------------
public class Main {
    public static void main(String[] args) {
        GroceryList groceryList = new GroceryList();

        
        GroceryItemOrder cookies = new GroceryItemOrder("Cookies", 2.30);
        cookies.setQuantity(4); // Set quantity to 4

        GroceryItemOrder milk = new GroceryItemOrder("Milk", 1.50);
        milk.setQuantity(2); // Set quantity to 2

        
        groceryList.add(cookies);
        groceryList.add(milk);

        
        System.out.println("Total cost: $" + groceryList.getTotalCost());
    }
}
